# This GitHub Action workflow automates the generation of the Mermaid diagram.
# It triggers whenever the data/graph.yml file is changed.

name: Generate Mermaid Diagram

on:
  # Run this workflow automatically when changes are pushed to the main branch
  # but only if files in the 'data/' directory have changed.
  push:
    branches:
      - main
    paths:
      - 'data/**'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Grant the workflow permission to write to the repository's contents.
permissions:
  contents: write

jobs:
  generate-diagram:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install the required Python library (PyYAML)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      # Step 4: Run the Python script to generate map.mmd
      - name: Generate Mermaid diagram from YAML
        run: python tools/yml-to-mermaid.py

      # Step 5: Commit and push the updated map.mmd file
      # This is the crucial step that saves the changes back to your repository.
      - name: Commit and push if there are changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add map.mmd
          # The following command will exit with a non-zero code if there are no changes,
          # which would stop the workflow. We add '|| exit 0' to prevent this.
          git diff --staged --quiet || (git commit -m "Automated: Update Mermaid diagram" && git push)
          echo "Diagram commit step completed."
